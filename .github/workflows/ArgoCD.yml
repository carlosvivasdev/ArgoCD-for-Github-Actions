name: GitHub CI/CD
on: [push]
jobs:
  environment:
    name: Preparacion de entorno
    runs-on: ubuntu-latest
    steps:
    - name: Conexion a k8s
      run: |
          mkdir -p ${HOME}/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ${HOME}/.kube/config
          kubectl config get-contexts
          kubectl config use-context do-nyc1-k8s-carlosvivas
    - name: Verificacion de ArgoCD
      run: |
        if kubectl get pods -n argocd | grep -q "argocd-server"; then
          echo "ArgoCD est치 instalado y ejecut치ndose."
        else
          echo "ArgoCD no est치 instalado o no se est치 ejecutando."
          exit 1
        fi
    - name: Instalar ArgoCD
      if: failure()
      run: |
        kubectl get namespace argocd || kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'
        kubectl get svc -n argocd
    - name: Instalar Argo CLI y dependencias
      if: failure()
      run: |
        apt-get update && apt-get install -y curl
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.8.0/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd
    - name: Configuracion de acceso a ARGOCD
      if: failure()
      run: |
        password=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
        argocd version
        