services:
  # postgres:
  #   image: postgres:14
  #   container_name: postgres-dash-iot
  #   environment:
  #     PGUSER: $POSTGRES_USER
  #     POSTGRES_USER: $POSTGRES_USER
  #     POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  #     POSTGRES_DB: $POSTGRES_DB
  #   ports:
  #     - "$POSTGRES_PORT:$POSTGRES_PORT"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #     - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   healthcheck:
  #     test:
  #       ["CMD-SHELL", "pg_isready"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - dash-iot-network

  api:
    build: ./api
    image: api-dash-iot:$API_VERSION
    container_name: api-dash-iot
    ports:
      - "$API_PORT:$API_PORT"
    env_file:
      - .env
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    volumes:
      - ./api:/usr/src/api-dash-iot:ro
    networks:
      - dash-iot-network

  grafana:
    image: grafana/grafana-oss:11.2.0
    container_name: grafana-dash-iot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - GF_INSTALL_PLUGINS=volkovlabs-form-panel
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    networks:
      - dash-iot-network

volumes:
  # pgdata:
  grafana-storage:

networks:
  dash-iot-network: